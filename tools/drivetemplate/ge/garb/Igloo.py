def calculate_igloo_temperature(external_temp, wall_thickness, thermal_conductivity, surface_area, heat_per_person, num_occupants, t_HVL):
    # Calculate total heat generated by occupants (watts)
    total_heat_generated = heat_per_person * num_occupants  # in watts

    # Prevent division by zero and ensure valid input
    if wall_thickness <= 0:
        raise ValueError("Wall thickness must be greater than zero.")

    # Apply HVL-based model for asymptotic temperature behavior
    flux=total_heat_generated*thermal_conductivity/surface_area/t_HVL
    hvl_ratio=wall_thickness/(t_HVL+wall_thickness)
    internal_temp = external_temp  + flux*hvl_ratio
    return internal_temp


# Example usage:
external_temp = -20  # External temperature in °C
wall_thickness = 1 # Wall thickness of the igloo in meters
thermal_conductivity = 0.1  # Thermal conductivity of snow in W/m·K
surface_area = 25  # Surface area of the igloo in square meters
heat_per_person = 100  # Heat generated per person in watts
num_occupants = 4  # Number of people inside the igloo
t_HVL = 0.05 # Half-value layer thickness for the material (in meters)

internal_temp = calculate_igloo_temperature(external_temp, wall_thickness, thermal_conductivity, surface_area, heat_per_person, num_occupants, t_HVL)

print(f"Estimated internal temperature of the igloo: {internal_temp:.2f}°C")
